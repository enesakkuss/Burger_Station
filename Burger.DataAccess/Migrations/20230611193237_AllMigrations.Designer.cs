// <auto-generated />
using System;
using Burger.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BurgerStation.DataAccess.Migrations
{
    [DbContext(typeof(BurgerStationContext))]
    [Migration("20230611193237_AllMigrations")]
    partial class AllMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BurgerStation.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ana Ürün"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Yan Ürün"
                        },
                        new
                        {
                            Id = 3,
                            Name = "İçecek"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Tatlı"
                        });
                });

            modelBuilder.Entity("BurgerStation.Domain.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NeighborhoodId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId")
                        .IsUnique();

                    b.HasIndex("NeighborhoodId")
                        .IsUnique();

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("BurgerStation.Domain.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("District", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bağcılar"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bahçelievler"
                        });
                });

            modelBuilder.Entity("BurgerStation.Domain.FinalOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("FinalOrder", (string)null);
                });

            modelBuilder.Entity("BurgerStation.Domain.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("Ingredient", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Köfte",
                            Price = 75m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cheddar",
                            Price = 25m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Marul",
                            Price = 0m
                        },
                        new
                        {
                            Id = 4,
                            Name = "Füme Et",
                            Price = 50m
                        },
                        new
                        {
                            Id = 5,
                            Name = "Kaburga",
                            Price = 50m
                        });
                });

            modelBuilder.Entity("BurgerStation.Domain.Neighborhood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Neighborhood", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DistrictId = 1,
                            Name = "	100. YIL MAHALLESİ"
                        },
                        new
                        {
                            Id = 2,
                            DistrictId = 1,
                            Name = "15 TEMMUZ MAHALLESİ"
                        },
                        new
                        {
                            Id = 3,
                            DistrictId = 1,
                            Name = "BAĞLAR MAHALLESİ"
                        },
                        new
                        {
                            Id = 4,
                            DistrictId = 1,
                            Name = "BARBAROS MAHALLESİ"
                        },
                        new
                        {
                            Id = 5,
                            DistrictId = 1,
                            Name = "ÇINAR MAHALLESİ"
                        },
                        new
                        {
                            Id = 6,
                            DistrictId = 1,
                            Name = "DEMİRKAPI MAHALLESİ"
                        },
                        new
                        {
                            Id = 7,
                            DistrictId = 1,
                            Name = "FATİH MAHALLESİ"
                        },
                        new
                        {
                            Id = 8,
                            DistrictId = 1,
                            Name = "FEVZİ ÇAKMAK MAHALLESİ"
                        },
                        new
                        {
                            Id = 9,
                            DistrictId = 1,
                            Name = "GÖZTEPE MAHALLESİ"
                        },
                        new
                        {
                            Id = 10,
                            DistrictId = 1,
                            Name = "GÜNEŞLİ MAHALLESİ"
                        },
                        new
                        {
                            Id = 11,
                            DistrictId = 1,
                            Name = "HÜRRİYET MAHALLESİ"
                        },
                        new
                        {
                            Id = 12,
                            DistrictId = 1,
                            Name = "İNÖNÜ MAHALLESİ"
                        },
                        new
                        {
                            Id = 13,
                            DistrictId = 1,
                            Name = "KAZIM KARABEKİR MAHALLESİ"
                        },
                        new
                        {
                            Id = 14,
                            DistrictId = 1,
                            Name = "KEMALPAŞA MAHALLESİ"
                        },
                        new
                        {
                            Id = 15,
                            DistrictId = 1,
                            Name = "KİRAZLI MAHALLESİ"
                        },
                        new
                        {
                            Id = 16,
                            DistrictId = 1,
                            Name = "MAHMUTBEY MAHALLESİ"
                        },
                        new
                        {
                            Id = 17,
                            DistrictId = 1,
                            Name = "MERKEZ MAHALLESİ"
                        },
                        new
                        {
                            Id = 18,
                            DistrictId = 1,
                            Name = "SANCAKTEPE MAHALLESİ"
                        },
                        new
                        {
                            Id = 19,
                            DistrictId = 1,
                            Name = "YAVUZ SELİM MAHALLESİ"
                        },
                        new
                        {
                            Id = 20,
                            DistrictId = 1,
                            Name = "YENİGÜN MAHALLESİ"
                        },
                        new
                        {
                            Id = 21,
                            DistrictId = 1,
                            Name = "YENİMAHALLE MAHALLESİ"
                        },
                        new
                        {
                            Id = 22,
                            DistrictId = 1,
                            Name = "YILDIZTEPE MAHALLESİ"
                        },
                        new
                        {
                            Id = 23,
                            DistrictId = 2,
                            Name = "BAHÇELİEVLER MAHALLESİ"
                        },
                        new
                        {
                            Id = 24,
                            DistrictId = 2,
                            Name = "CUMHURİYET MAHALLESİ"
                        },
                        new
                        {
                            Id = 25,
                            DistrictId = 2,
                            Name = "ÇOBANÇEŞME MAHALLESİ"
                        },
                        new
                        {
                            Id = 26,
                            DistrictId = 2,
                            Name = "FEVZİ ÇAKMAK MAHALLESİ"
                        },
                        new
                        {
                            Id = 27,
                            DistrictId = 2,
                            Name = "HÜRRİYET MAHALLESİ"
                        },
                        new
                        {
                            Id = 28,
                            DistrictId = 2,
                            Name = "KOCASİNAN MERKEZ MAHALLESİ"
                        },
                        new
                        {
                            Id = 29,
                            DistrictId = 2,
                            Name = "SİYAVUŞPAŞA MAHALLESİ"
                        },
                        new
                        {
                            Id = 30,
                            DistrictId = 2,
                            Name = "SOĞANLI MAHALLESİ"
                        },
                        new
                        {
                            Id = 31,
                            DistrictId = 2,
                            Name = "ŞİRİNEVLER MAHALLESİ"
                        },
                        new
                        {
                            Id = 32,
                            DistrictId = 2,
                            Name = "YENİBOSNA MERKEZ MAHALLESİ"
                        },
                        new
                        {
                            Id = 33,
                            DistrictId = 2,
                            Name = "ZAFER MAHALLESİ"
                        });
                });

            modelBuilder.Entity("BurgerStation.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("BurgerStation.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("IngredientProduct", b =>
                {
                    b.Property<int>("IngredientsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("IngredientsId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("IngredientProduct");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<int>("OrdersId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("OrdersId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("BurgerStation.Domain.Customer", b =>
                {
                    b.HasOne("BurgerStation.Domain.District", "District")
                        .WithOne("Customer")
                        .HasForeignKey("BurgerStation.Domain.Customer", "DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BurgerStation.Domain.Neighborhood", "Neighborhood")
                        .WithOne("Customer")
                        .HasForeignKey("BurgerStation.Domain.Customer", "NeighborhoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");

                    b.Navigation("Neighborhood");
                });

            modelBuilder.Entity("BurgerStation.Domain.FinalOrder", b =>
                {
                    b.HasOne("BurgerStation.Domain.Customer", "Customer")
                        .WithMany("FinalOrders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BurgerStation.Domain.Order", "Order")
                        .WithOne()
                        .HasForeignKey("BurgerStation.Domain.FinalOrder", "OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BurgerStation.Domain.Neighborhood", b =>
                {
                    b.HasOne("BurgerStation.Domain.District", "District")
                        .WithMany("Neighborhoods")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("BurgerStation.Domain.Product", b =>
                {
                    b.HasOne("BurgerStation.Domain.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("IngredientProduct", b =>
                {
                    b.HasOne("BurgerStation.Domain.Ingredient", null)
                        .WithMany()
                        .HasForeignKey("IngredientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BurgerStation.Domain.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("BurgerStation.Domain.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BurgerStation.Domain.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BurgerStation.Domain.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BurgerStation.Domain.Customer", b =>
                {
                    b.Navigation("FinalOrders");
                });

            modelBuilder.Entity("BurgerStation.Domain.District", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();

                    b.Navigation("Neighborhoods");
                });

            modelBuilder.Entity("BurgerStation.Domain.Neighborhood", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
